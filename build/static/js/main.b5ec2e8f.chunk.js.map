{"version":3,"sources":["pages lazy /^/.//.*$/ groupOptions: {} namespace object","route/config.js","route/asyncComponent.js","route/Main.js","App.js","serviceWorker.js","index.js"],"names":["map","./About","./About.js","./Home","./Home.js","./Rechart/Bar","./Rechart/Bar/","./Rechart/Bar/index","./Rechart/Bar/index.js","./Rechart/Line","./Rechart/Line/","./Rechart/Line/index","./Rechart/Line/index.js","webpackAsyncContext","req","ids","Promise","all","slice","__webpack_require__","e","then","id","resolve","Error","code","keys","Object","module","exports","_import_views","filePath","importComponent","concat","_Component","AsyncComponent","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","component","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","_ref","wrap","_context","prev","next","sent","default","setState","stop","apply","arguments","Component","react_default","createElement","routerList","path","name","icon","layout","exact","redirect","children","RouteComponent","route","Route","Main","Switch","Redirect","from","to","App","defaultActive","console","log","pathName","window","location","hash","substring","className","es5","onSelect","bind","item","SubMenu","index","title","childrenItem","Link","Item","route_Main","Boolean","hostname","match","ReactDOM","render","HashRouter","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b5ec2e8f.chunk.js","sourcesContent":["var map = {\n\t\"./About\": [\n\t\t114,\n\t\t3\n\t],\n\t\"./About.js\": [\n\t\t114,\n\t\t3\n\t],\n\t\"./Home\": [\n\t\t115,\n\t\t4\n\t],\n\t\"./Home.js\": [\n\t\t115,\n\t\t4\n\t],\n\t\"./Rechart/Bar\": [\n\t\t61,\n\t\t0,\n\t\t1\n\t],\n\t\"./Rechart/Bar/\": [\n\t\t61,\n\t\t0,\n\t\t1\n\t],\n\t\"./Rechart/Bar/index\": [\n\t\t61,\n\t\t0,\n\t\t1\n\t],\n\t\"./Rechart/Bar/index.js\": [\n\t\t61,\n\t\t0,\n\t\t1\n\t],\n\t\"./Rechart/Line\": [\n\t\t62,\n\t\t0,\n\t\t2\n\t],\n\t\"./Rechart/Line/\": [\n\t\t62,\n\t\t0,\n\t\t2\n\t],\n\t\"./Rechart/Line/index\": [\n\t\t62,\n\t\t0,\n\t\t2\n\t],\n\t\"./Rechart/Line/index.js\": [\n\t\t62,\n\t\t0,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 125;\nmodule.exports = webpackAsyncContext;","import asyncComponent from './asyncComponent';\nconst _import_views = filePath => asyncComponent(() => {\n    return import(`../pages/${filePath}`)\n});\n\nexport const routerList = [\n    {\n        path: '/home',\n        name: '首页',\n        icon: 'el-icon-menu',\n        layout: true,\n        exact: true,\n        component: _import_views('Home')\n    },\n    {\n        path: '/about',\n        name: '关于',\n        icon: 'el-icon-setting',\n        layout: true,\n        exact: false,\n        component: _import_views('About')\n    },\n    {\n        path: '/charts',\n        name: '图表',\n        icon: 'el-icon-setting',\n        layout: true,\n        exact: false,\n        redirect: '/charts/lineChart',\n        children: [\n            { path: '/charts/lineChart', component: _import_views('Rechart/Line'), name: 'LineChart' },\n            { path: '/charts/barChart', component: _import_views('Rechart/Bar'), name: 'BarChart' },\n        ]\n    }\n]\n\n\n","import React, { Component } from 'react'\n\nexport default function asyncComponent(importComponent) {\n    class AsyncComponent extends Component {\n\n        constructor(props) {\n            super(props);\n            this.state = {\n                component: null\n            }\n        }\n\n        async componentDidMount() {\n            const { default: component } = await importComponent();\n            this.setState({ component: component });\n        }\n\n        render() {\n            const Component = this.state.component;\n            return Component ? <Component {...this.props} /> : null;\n        }\n    }\n    return AsyncComponent;\n}\n\n\n","import React from \"react\";\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { routerList } from './config';\nconst RouteComponent = route => <Route key={route.path} exact={route.exact || false} path={route.path} component={route.component} />\nconst renderRouteComponent = routes => routes.map(route => {\n    return route.children ? route.children.map(route => RouteComponent(route)) : RouteComponent(route)\n})\n\nconst Main = () => {\n    return (\n            <Switch>\n                {renderRouteComponent(routerList)}\n                <Redirect from='/' to='/home' />\n            </Switch>\n    )\n};\n\nexport default Main;\n\n","import { Link } from \"react-router-dom\";\nimport Main from './route/Main';\nimport { Menu } from 'element-react';\nimport React, { Component } from 'react'\nimport 'element-theme-default'\nimport './App.css';\nimport { routerList } from './route/config';\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    // this.onSelect = this.onSelect.bind(this);\n    this.state = {\n      defaultActive: '/'\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\")\n    const pathName = window.location.hash.substring(1)\n    if (this.state.defaultActive !== pathName) {\n      this.setState({\n        defaultActive: pathName\n      })\n    }\n\n  }\n\n  onSelect() {\n    console.log(\"onSelect\")\n    const pathName = window.location.hash.substring(1)\n    if (this.state.defaultActive !== pathName) {\n      this.setState({\n        defaultActive: pathName\n      })\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"app-container\">\n          <div>\n            <Menu defaultActive={this.state.defaultActive} className=\"el-menu-vertical-demo app-slide-bar\" onSelect={this.onSelect.bind(this)}>\n              {routerList.map(item => {\n                if (item.children) {\n                  return (\n                    <Menu.SubMenu key={item.path} index={item.path} title={<span><i className={item.icon}></i>{item.name}</span>}>\n                      {item.children.map(childrenItem => {\n                        return (<Link className=\"app-link\" to={childrenItem.path} key={childrenItem.path}>\n                          <Menu.Item index={childrenItem.path}>\n                            <i className={childrenItem.icon}></i>{childrenItem.name}\n                          </Menu.Item>\n                        </Link>\n                        )\n                      })}\n                    </Menu.SubMenu>\n                  )\n                } else {\n                  return (\n                    <Link className=\"app-link\" to={item.path} key={item.path}>\n                      <Menu.Item index={item.path}>\n                        <i className={item.icon}></i>{item.name}\n                      </Menu.Item>\n                    </Link>\n                  )\n                }\n\n              })}\n            </Menu>\n          </div>\n          <div className=\"app-content\">\n            <Main></Main>\n          </div>\n        </div>\n    )\n  }\n};\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n    <HashRouter>\n        <App></App>\n    </HashRouter>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}